# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - cemadragdev

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        run: pip install -r requirements.txt
        
      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            release.zip
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip


      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_081271124233468BBC6D3542A099B35E }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_B38DA5C1C5A24500BD649E0DE4B1F779 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_F2E0D42ADC494D32A78B03B12B8B3D6A }}

      # Step 1: Upload local app_offline.htm to Azure Web App to take the app offline before deployment
      - name: Upload local app_offline.htm to Azure Web App
        run: |
          az webapp deploy --resource-group 'cemad_rag' --name 'cemadragdev' --src-path maintenance/app_offline.htm --type static


      # Step 2: Deploy the Streamlit app
      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'cemadragdev'
          slot-name: 'Production'

      # Step 3: Remove app_offline.htm after deployment to bring the app back online
      - name: Remove app_offline.htm to bring the app back online
        run: |
          az webapp delete --resource-group 'cemad_rag' --name 'cemadragdev' --src app_offline.htm
